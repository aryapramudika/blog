[{"content":"Virtual IP is very important for accessing shared resource in a cluster.\nPacemaker will install a virtual IP to the node, and if the node dies, it will be installed to another available node.\nNote When running this command i also use root user\nSetup Run in nodes1:\nWe will using pcs command-line utility to create virtual ip\npcs resource create virtual_ip ocfðŸ’“IPaddr2 ip=10.1.1.125 cidr_netmask=32 op monitor interval=30s Verify In Nodes1:\nip a Example output:\n2: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether de:88:f7:1e:f4:16 brd ff:ff:ff:ff:ff:ff altname enp0s18 altname ens18 inet 10.1.1.123/24 brd 10.1.1.255 scope global noprefixroute eth0 valid_lft forever preferred_lft forever inet 10.1.1.125/32 brd 10.1.1.255 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::dc88:f7ff:fe1e:f416/64 scope link valid_lft forever preferred_lft forever the VIP is assigned to nodes1\nTest ping from node1\nping -c2 10.1.1.125 PING 10.1.1.125 (10.1.1.125) 56(84) bytes of data. 64 bytes from 10.1.1.125: icmp_seq=1 ttl=64 time=0.027 ms 64 bytes from 10.1.1.125: icmp_seq=2 ttl=64 time=0.025 ms Test ping from node2\nping -c2 10.1.1.125 PING 10.1.1.125 (10.1.1.125) 56(84) bytes of data. 64 bytes from 10.1.1.125: icmp_seq=1 ttl=64 time=0.027 ms 64 bytes from 10.1.1.125: icmp_seq=2 ttl=64 time=0.025 ms Before this action, you must run ping to 10.1.1.125(VIP on other machine) to get realtime connection(Requst timeout or not)\nIn Nodes1 who have VIP, disable interface(using console/or other if u have 1 NIC the ssh session is disconnect):\nip link set eth0 down Check in node2:\n[root@pace2 ~]# ip a | grep eth0 2: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 inet 10.1.1.124/24 brd 10.1.1.255 scope global noprefixroute eth0 inet 10.1.1.125/32 brd 10.1.1.255 scope global eth0 VIP moved to nodes2\nDone, you have successfully created a vip for pacemaker cluster.\nSee you in next tutorial about pacemaker.\n","permalink":"https://aryapramudika.com/blog/pacemaker/vip/","summary":"Virtual IP is very important for accessing shared resource in a cluster.\nPacemaker will install a virtual IP to the node, and if the node dies, it will be installed to another available node.\nNote When running this command i also use root user\nSetup Run in nodes1:\nWe will using pcs command-line utility to create virtual ip\npcs resource create virtual_ip ocfðŸ’“IPaddr2 ip=10.1.1.125 cidr_netmask=32 op monitor interval=30s Verify In Nodes1:","title":"Setup Virtual IP in Pacemaker Cluster"},{"content":"Pacemaker \u0026amp; Corosync is popular stack for High Avaibility on Linux Servers, since 2004.\nPacemaker is a high-availability cluster resource manager â€“ software that runs on a set of hosts (a cluster of nodes) in order to preserve btegrity and minimize downtime of desired services (resources).\nCorosync is open source group communication system that provides ordered communication delivery, cluster membership, quorum enforcement, and other features among the nodes, it helps detect component failures and orchestrate necessary failover procedures to minimize interruptions to applications.\nYou can read complete documentation in here:\nhttps://en.wikipedia.org/wiki/Pacemaker_(software)#:~:text=Pacemaker%20is%20an%20open%2Dsource,to%20be%20its%20own%20project.\nhttps://clusterlabs.org/pacemaker/doc/2.1/Clusters_from_Scratch/html/intro.html\nhttps://www.ibm.com/docs/en/db2/11.5?topic=software-pacemaker-linux\nPresetup I use AlmaLinux 9 with 2 nodes for this tutorial.\nSetup Date Configure on both server to sync/get same date:\nExample for Asia/Jakarta timezone\ntimedatectl set-timezone Asia/Jakarta Enable NTP:\ntimedatectl set-ntp true Setup Hostname Setup on 2 nodes:\nNodes1:\nhostnamectl set-hostname pace1 Nodes2:\nhostnamectl set-hostname pace2 Setup Fully Qualified Domain Name on both nodes:\nvim /etc/hosts 10.1.1.123 pace1.pram.lab pace1 10.1.1.124 pace2.pram.lab pace2 Testing ping from node1 to node2:\nping -c2 pace2 PING pace2.pram.lab (10.1.1.124) 56(84) bytes of data. 64 bytes from pace2.pram.lab (10.1.1.124): icmp_seq=1 ttl=64 time=0.197 ms 64 bytes from pace2.pram.lab (10.1.1.124): icmp_seq=2 ttl=64 time=0.268 ms Testing ping from node2 to node1:\nping -c2 pace1 PING pace1.pram.lab (10.1.1.123) 56(84) bytes of data. 64 bytes from pace1.pram.lab (10.1.1.123): icmp_seq=1 ttl=64 time=0.345 ms 64 bytes from pace1.pram.lab (10.1.1.123): icmp_seq=2 ttl=64 time=0.377 ms Setup Passwordless SSH If you perform action to transfer files and running remote command to another nodes\nIn Nodes1:\nssh-keygen -t ed25519 -f ~/.ssh/pace Copy to another nodes, Nodes2:\nssh-copy-id ~/.ssh/pace.pub root@pace2 Testing\nssh -i ~/.ssh/pace pace2 \u0026#34;cat /etc/hostname\u0026#34; pace2 Install all packages On both nodes:\nEnable and activate High Availability repo\ndnf config-manager --set-enabled highavailability Install package\ndnf install -y pacemaker pcs psmisc policycoreutils-python3 Add services in firewall (if used)\nfirewall-cmd --add-service=high-availability --permanent firewall-cmd --reload Setup Cluster On both nodes:\nEnable pcs daemon for command-line interface to manage corosync configuration , and other function.\nsystemctl enable --now pcsd Change hacluster user password, We must set the password because to running command locally on both nodes for perform such tasks as start/stop cluster and many more.\npasswd hacluster You can set same password on both nodes\nConfigure corosync In Nodes1:\npcs host auth pace1 pace2 Output:\nUsername: hacluster Password: insertyourpassword pace2: Authorized pace1: Authorized Create cluster:\npcs cluster setup pram-cluster pace1 pace2 Start cluster:\npcs cluster start --all Verify cluster:\npcs status Cluster name: pram-cluster Status of pacemakerd: \u0026#39;Pacemaker is running\u0026#39; (last updated 2023-09-22 22:26:53 +07:00) Cluster Summary: * Stack: corosync * Current DC: pace2 (version 2.1.5-9.el9_2.3.alma.1-a3f44794f94) - partition with quorum * Last updated: Fri Sep 22 22:26:54 2023 * Last change: Fri Sep 22 21:10:51 2023 by root via cibadmin on pace1 * 2 nodes configured * 1 resource instance configured Node List: * Online: [ pace1 pace2 ] Daemon Status: corosync: active/disabled pacemaker: active/disabled pcsd: active/enabled Done, you have successfully created a cluster with pacemaker, corosync , and pcs.\nSee you in next tutorial about pacemaker.\n","permalink":"https://aryapramudika.com/blog/pacemaker/install/","summary":"Pacemaker \u0026amp; Corosync is popular stack for High Avaibility on Linux Servers, since 2004.\nPacemaker is a high-availability cluster resource manager â€“ software that runs on a set of hosts (a cluster of nodes) in order to preserve btegrity and minimize downtime of desired services (resources).\nCorosync is open source group communication system that provides ordered communication delivery, cluster membership, quorum enforcement, and other features among the nodes, it helps detect component failures and orchestrate necessary failover procedures to minimize interruptions to applications.","title":"Install \u0026 Build Cluster with Pacemaker, Corosync, pcs on Centos/Alma/RHEL 9"}]